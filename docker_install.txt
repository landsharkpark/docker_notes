#
#
#

# help - https://docs.docker.com and 
#  CLI docker --help

Docker Installation

Section 14 - Linux Install

### Note: following curl install does not work on AWS Amazon AMI O/S
curl -sSL https://get.docker.com/ | sh

get.docker.com

### Instructions for each distro
store.docker.com


#Add user to docker group - don't have to add sudo to every command
sudo usermod -aG docker <<username>>
example:  sudo usermod -aG docker ubuntu

sudo docker version

docker-machine
### Instructions to install on docs.docker.com
https://docs.docker.com/machine/install-machine/#install-machine-directly
###Verify after install
docker-machine version


docker-compose
### Instructions to install on docs.docker.com
https://docs.docker.com/search/?q=docker-compose
###Verify after install
docker-compose --version

*Note:  Manual install means manual updates

###GitHub code repository
git clone https://github.com/BretFisher/udemy-docker-mastery.git

#For online help
docker <tab><tab>
docker image <tab><tab>
docker image ls --<tab><tab>


Section 18
-------------------
docker version
docker info

#New - docker management commands
docker <command> <subcommand> 
example:  docker container run

Section 19
Image vs Container
Image - bin,lib,src code that make up an application
Container - Running instance of an Image

Registry - "github" of docker images

docker container run --publish 80:80 nginx

#from browser
http://localhost

#Sequence of events
1. Download image "nginx"
2. Started a new container from image
3. Opened port 80 on the host IP
4. Routes HTTP traffic to the container IP (port 80)

#different port example - 8888:80
8888 - host ip port
80 - Container ip port

#example docker commands
docker container run --publish 80:80 --detach nginx
docker container ls
docker container stop <container_id>
docker container ls -a

docker container run publish 80:80 --detach --name webhost nginx
***Refresh browser localhost a few times
docker container logs webhost
docker container top webhost
docker container rm <container_id>
###NOTE:  Cannot remove a running container
docker container rm -f <container_id>
### -f will remove a running container_id

Lecture 20
'docker container run' debrief

Lecture 21
docker run --name mongo -d mongo
docker stop mongo
ps aux | grep mongo
docker start mongo

Lecture 23 - assignment
docker container run -d --name proxy -p 80:80 nginx
docker container run -d --name webserver -p 8080:80 httpd
docker container run -d -p 3306:3306 --name db -e MYSQL_RANDOM_ROOT_PASSWORD=yes mysql

docker container logs db 

docker container ls

curl localhost

curl localhost:8080

docker container rm -f <container_id>

Lecture 25 - CLI Process Monitoring

docker container run -d --name nginx nginx

docker container run -d --name mysql -e MYSQL_RANDOM_ROOT_PASSWORD=true mysql

docker container top mysql
docker container top nginx

docker container inspect mysql
docker container inspect nginx

docker container stack --help
docker container stack

Lecture 26 - Getting a Shell inside container

docker container run -it
docker container exec -it

docker container run -it --name proxy nginx bash

root@7d4ec45f400d:/# ls -al

root@7d4ec45f400d:/# exit

docker container run -it --name ubuntu ubuntu

docker container start --help

docker container start -ai ubuntu

docker container exec --help

docker container exec -it mysql bash

docker pull alpine

docker image ls

## This will error - bash is not in alpine image
docker container run -it alpine bash 

docker container run -it alpine sh

Lecture 27 - Docker Networks Concepts for Private and Public Comms in Containers

docker container run -p

docker container port <container>

-p --publish

docker container port webhost

docker container inspect --format '{{ .NetworkSettings.IPAddress }}' webhost

Lecture 28 - Fix for Nginx
replace nginx with nginx:alpine 
-> nginx:alpine will allow ping









